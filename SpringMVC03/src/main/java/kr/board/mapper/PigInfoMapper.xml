<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.board.mapper.PigInfoMapper">

	<select id="getWarnCountByFarmIdx" parameterType="int"
		resultType="kr.board.entity.PigInfo">
		SELECT created_at, warn_cnt, livestock_cnt
		FROM pig_info
		WHERE farm_idx = #{farm_idx}
		LIMIT 10
	</select>

	<select id="getdayWarnCount" parameterType="int"
		resultType="kr.board.entity.PigInfo">
  <![CDATA[
    SELECT created_date, AVG(warn_cnt) AS avg_warn_cnt, AVG(livestock_cnt) AS avg_livestock_cnt
    FROM (
        SELECT 
            DATE(created_at) AS created_date,
            warn_cnt,
            livestock_cnt
        FROM 
           pig_info
        WHERE 
            farm_idx = #{farm_idx}
        ORDER BY 
            created_at DESC
        LIMIT 100
    ) subquery
    GROUP BY created_date
    ORDER BY created_date DESC
    LIMIT 10;
    ]]>
	</select>

	<select id="gettimeWarnCount" parameterType="int"
		resultType="kr.board.entity.PigInfo">
<!--     <![CDATA[
WITH recent_data AS (
    SELECT *
    FROM pig_info
    WHERE farm_idx = #{farm_idx}
    ORDER BY created_at DESC
    LIMIT 100
),
half_hour_intervals AS (
    SELECT 
        CASE 
            WHEN MINUTE(created_at) < 30 THEN DATE_FORMAT(created_at, '%Y-%m-%d %H:00:00')
            ELSE DATE_FORMAT(created_at, '%Y-%m-%d %H:30:00')
        END AS time_interval,
        warn_cnt, livestock_cnt, created_at
    FROM recent_data
)
SELECT 
    time_interval AS `interval`,
    AVG(warn_cnt) AS warnCnt,
    AVG(livestock_cnt) AS livestockCnt,
    MAX(created_at) AS created_date
FROM half_hour_intervals
GROUP BY time_interval
ORDER BY `interval` DESC
LIMIT 10;
    ]]> -->
     <![CDATA[
    SELECT 
	    CONCAT(SUBSTR(MIN(created_at), 1, 10), ' ',
	           CASE 
	               WHEN SUBSTR(MIN(created_at), 15, 2) < '30' THEN CONCAT(SUBSTR(MIN(created_at), 12, 2), ':00')
	               ELSE CONCAT(SUBSTR(MIN(created_at), 12, 2), ':30')
	           END) AS created_date,
	    ROUND(AVG(livestock_cnt)) AS avg_livestock_cnt, 
	    ROUND(AVG(warn_cnt)) AS avg_warn_cnt, 
	    farm_idx
	FROM pig_info
	WHERE farm_idx = #{farm_idx}
	GROUP BY farm_idx, SUBSTR(created_at, 1, 10), 
	         CASE 
             WHEN SUBSTR(created_at, 15, 2) < '30' THEN CONCAT(SUBSTR(created_at, 12, 2), ':00')
             ELSE CONCAT(SUBSTR(created_at, 12, 2), ':30')
         END
	ORDER BY created_date DESC
	LIMIT 10
 	]]>
	</select>



</mapper>